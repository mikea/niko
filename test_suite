## atoms: entering and printing
# integers
> 1 .
1
> -1 .
-1
> 9223372036854775807 .
9223372036854775807
> 9223372036854775808 .
9223372036854775807
# floats
> 1. .
1.
> 1.0 .
1.
> 9007199254740992. .
9.00719925474099e+15
> 3.1415926 .
3.1415926
> -789.012 .
-789.012
> 1e3
> 1.23e3 .
1230.
> -4.56e-2 .
-0.0456
> 1e30 .
1e+30
> 1e-30 .
1e-30
# strings
> "" .
""
> "abc" .
"abc"
> "this is test" .
"this is test"
> "abc" shape . "this is test" shape .
[ 3 ]
[ 12 ]
## arrays
> [ ] .
[ ]
> [ 1 2 3 ] .
[ 1 2 3 ]
> [ [ 1 2 3 ] [ 4 5 6 ] ] .
[ [ 1 2 3 ] [ 4 5 6 ] ]
> [ [ 1 2 3 ] [ 4 5 6 ] ] shape .
[ 2 3 ]
> [ 1. 2. ] .
[ 1. 2. ]
> [ [ 1. 2. 3. ] [ 4. 5. 6. ] ] shape .
[ 2 3 ]
> [ "abc" "def" ] dup . shape .
[ "abc" "def" ]
[ 2 3 ]
> [ "" "1" "12" "123" ] dup . shape .
[ "" "1" "12" "123" ]
[ 4 ]
> [ [ 1. 2. 3. ] [ 4 5 6 ] ] dup . shape .
[ [ 1. 2. 3. ] [ 4 5 6 ] ]
[ 2 ]
## stack manipulation
# dup
> 1 dup . .
1
1
# drop
> 1 2 drop .
1
# swap
> 1 2 swap . .
1
2
## creating arrays
# zeros
> 10 zeros .
[ 0 0 0 0 0 0 0 0 0 0 ]
> [ 10 ] zeros .
[ 0 0 0 0 0 0 0 0 0 0 ]
> [ 2 3 ] zeros .
[ [ 0 0 0 ] [ 0 0 0 ] ]
# ones
> 10 ones .
[ 1 1 1 1 1 1 1 1 1 1 ]
> [ 10 ] ones .
[ 1 1 1 1 1 1 1 1 1 1 ]
> [ 2 3 ] ones .
[ [ 1 1 1 ] [ 1 1 1 ] ]
# index
> 10 index .
[ 0 1 2 3 4 5 6 7 8 9 ]
> [ 10 ] index .
[ 0 1 2 3 4 5 6 7 8 9 ]
> [ 2 3 ] index .
[ [ 0 1 2 ] [ 3 4 5 ] ]
## information about arrays
# shape
> 10 zeros shape .
[ 10 ]
> [ 2 3 4 5 ] zeros shape .
[ 2 3 4 5 ]
> 100 index shape .
[ 100 ]
> 10 index 1 + zeros shape .
[ 1 2 3 4 5 6 7 8 9 10 ]
# len
> 10 zeros len .
10
> 100 index len .
100
> 10 index 1 + index len .
3628800
## unary words
# neg
> 1 neg .
-1
> 1. neg .
-1.
> [ 1 1. ] neg .
[ -1 -1. ]
# abs
> [ 1 -1 ] abs .
[ 1 1 ]
> [ 1. -1. ] abs .
[ 1. 1. ]
> [ -1 -1. ] abs .
[ 1 1. ]
# sqrt
> 2. sqrt .
1.4142135623731
> 2 sqrt .
1.4142135623731
> [ 2. 3 4. ] sqrt .
[ 1.4142135623731 1.73205080756888 2. ]
> 3 index acos .
[ 1.5707963267949 0. nan. ]
> 3 index acosh .
[ -nan. 0. 1.31695789692482 ]
> 3 index asin .
[ 0. 1.5707963267949 nan. ]
> 3 index asinh .
[ 0. 0.881373587019543 1.44363547517881 ]
> 3 index atan .
[ 0. 0.785398163397448 1.10714871779409 ]
> 3 index atanh .
[ 0. inf. -nan. ]
> 3 index cbrt .
[ 0. 1. 1.25992104989487 ]
> 5 index atan ceil .
[ 0. 1. 2. 2. 2. ]
> 3 index cos .
[ 1. 0.54030230586814 -0.416146836547142 ]
> 3 index cosh .
[ 1. 1.54308063481524 3.76219569108363 ]
> 3 index erf .
[ 0. 0.842700792949715 0.995322265018953 ]
> 3 index exp .
[ 1. 2.71828182845905 7.38905609893065 ]
> 3 index bessel1_0 .
[ 1. 0.765197686557967 0.223890779141236 ]
> 3 index bessel1_1 .
[ 0. 0.440050585744933 0.576724807756873 ]
> 3 index bessel2_0 .
[ -inf. 0.088256964215677 0.510375672649745 ]
> 3 index bessel2_1 .
[ -inf. -0.781212821300289 -0.107032431540938 ]
> 3 index lgamma .
[ inf. 0. 0. ]
> 3 index log .
[ -inf. 0. 0.693147180559945 ]
> 3 index log10 .
[ -inf. 0. 0.301029995663981 ]
> 3 index log1p .
[ 0. 0.693147180559945 1.09861228866811 ]
> 3 index sin .
[ 0. 0.841470984807897 0.909297426825682 ]
> 3 index sinh .
[ 0. 1.1752011936438 3.62686040784702 ]
> 3 index sqrt .
[ 0. 1. 1.4142135623731 ]
> 3 index tan .
[ 0. 1.5574077246549 -2.18503986326152 ]
> 3 index tanh .
[ 0. 0.761594155955765 0.964027580075817 ]
## binary words
# +
> 1 2 + .
3
> 10 index dup + .
[ 0 2 4 6 8 10 12 14 16 18 ]
> [ 2 3 ] index dup + .
[ [ 0 2 4 ] [ 6 8 10 ] ]
> [ 2 3 ] index [ 3 2 ] index + .
[ [ 0 2 4 ] [ 6 8 10 ] ]
> 10 index 2 + .
[ 2 3 4 5 6 7 8 9 10 11 ]
> 2 10 index + .
[ 2 3 4 5 6 7 8 9 10 11 ]
> 2. 10 index + .
[ 2. 3. 4. 5. 6. 7. 8. 9. 10. 11. ]
> 10 index 2. + .
[ 2. 3. 4. 5. 6. 7. 8. 9. 10. 11. ]
> 1. 2. + .
3.
> [ 1. 2. ] [ 3. 4. ] + .
[ 4. 6. ]
> [ 2. 3. ] 4. + .
[ 6. 7. ]
> 4. [ 2. 3. ] + .
[ 6. 7. ]
> 1 2. + .
3.
> 1. 2 + .
3.
> "abc" 2 +
ERROR: unsupported types
# *
> 312 45 * .
14040
> 10 index dup * .
[ 0 1 4 9 16 25 36 49 64 81 ]
# -
> 10 index 10 ones - .
[ -1 0 1 2 3 4 5 6 7 8 ]
# /
> 10 index 1. + dup / .
[ 1. 1. 1. 1. 1. 1. 1. 1. 1. 1. ]
> 1. 2. / .
0.5
> [ 1. ] 2. / .
[ 0.5 ]
> 1. [ 2. ] / .
[ 0.5 ]
> 1 2. / .
0.5
> 1. 2 / .
0.5
## higher order words
# fold
> 10 index `+ fold .
45
> 10000 ones `+ fold .
10000
> 10 index 1 + `* fold .
3628800
